n=2#Number of electrons
U=0#U/t,the relavent strength of interaction
a1=make_base(n,0)#Half-filled base,Used to construct H Matrix.
dim=combination(n)#Dimension of Matrix
H1=make_matrix(a1,U,dim,n)#Hubbard Matrix
temp=np.random.random(dim)
i=Lanczos_time(temp,H1,1E-8)#Use Lanczos Iteration.(Stop when converged)
a,b=Lanczos_ground_state(temp,H1,i)#a returns ground energy,b returns ket.

#Picture
pointnum=100#Size of picture is pnum*pnum
x=np.linspace(-4,4,pointnum)#Range for x
s=np.zeros([pointnum,pointnum])
k0=3.141592653589793
k=np.linspace(0,k0,pointnum)#Range for k
for count in range(pointnum):
    for count2 in range(pointnum):
        z=x[count]+0.03j#0.03j just represents a small imaginary part.
        G=Green_mtx_standard(z,n,U,a,b)#Lehmmann Rep for Green function
        s[count][count2]=Periodization(G,n,k[count2])#Periodization

#plt.figure()
#plt.contourf(k,x,s,200)
#plt.colorbar()
#plt.show()
